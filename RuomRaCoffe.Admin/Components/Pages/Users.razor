@page "/users"
@using RuomRaCoffe.Admin.Services
@using RuomRaCoffe.API.Data.Entities
@inject UserService UserService

<PageTitle>Users Management</PageTitle>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1>Users Management</h1>
                <button class="btn btn-primary" @onclick="ShowCreateModal">
                    <i class="bi bi-plus"></i> Add New User
                </button>
            </div>
        </div>
    </div>

    @if (isLoading)
    {
        <div class="text-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Name</th>
                                        <th>Email</th>
                                        <th>Phone</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (users != null)
                                    {
                                        @foreach (var user in users)
                                        {
                                            <tr>
                                                <td>@user.Id</td>
                                                <td>@user.Name</td>
                                                <td>@user.Email</td>
                                                <td>@user.Phone</td>
                                                <td>
                                                    <button class="btn btn-sm btn-outline-primary me-2" @onclick="() => EditUser(user)">
                                                        <i class="bi bi-pencil"></i>
                                                    </button>
                                                    <button class="btn btn-sm btn-outline-danger" @onclick="() => DeleteUser(user.Id)">
                                                        <i class="bi bi-trash"></i>
                                                    </button>
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private List<User>? users;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadUsers();
    }

    private async Task LoadUsers()
    {
        try
        {
            isLoading = true;
            users = await UserService.GetUsersAsync();
        }
        catch (Exception ex)
        {
            // TODO: Add proper error handling with toast notification
            Console.WriteLine($"Error loading users: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private void ShowCreateModal()
    {
        // TODO: Implement create user modal
    }

    private void EditUser(User user)
    {
        // TODO: Implement edit user functionality
    }

    private async Task DeleteUser(int userId)
    {
        // TODO: Implement delete user functionality
    }
} 