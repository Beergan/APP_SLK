@page "/users"
@using RuomRaCoffe.Admin.Services
@using RuomRaCoffe.API.Data.Entities
@inject UserService UserService

<PageTitle>Users Management</PageTitle>

<div class="md-container">
    <div class="md-row">
        <div class="md-col-12">
            <div class="md-d-flex md-justify-content-between md-align-items-center md-mb-4">
                <h1 class="md-d-flex md-align-items-center">
                    <span class="material-icons md-font-size-2xl md-mb-0" style="margin-right: 0.5rem;">person</span>
                    Users Management
                </h1>
                <button class="md-btn md-btn-primary md-mb-0" @onclick="ShowCreateModal">
                    <span class="material-icons" style="margin-right: 0.25rem;">add</span>
                    Add New User
                </button>
            </div>
        </div>
    </div>

    @if (isLoading)
    {
        <div class="md-loading">
            <div class="md-spinner"></div>
        </div>
    }
    else
    {
        <div class="md-row">
            <div class="md-col-12">
                <div class="md-card">
                    <div class="md-card-body">
                        <div style="overflow-x: auto;">
                            <table class="md-table">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Name</th>
                                        <th>Email</th>
                                        <th>Phone</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (users != null)
                                    {
                                        @foreach (var user in users)
                                        {
                                            <tr>
                                                <td>@user.Id</td>
                                                <td>
                                                    <div class="md-d-flex md-align-items-center">
                                                        <div class="md-avatar md-mb-0" style="margin-right: 0.5rem;">
                                                            @user.Name.Substring(0, 1).ToUpper()
                                                        </div>
                                                        <div>
                                                            <h6 class="md-mb-0">@user.Name</h6>
                                                        </div>
                                                    </div>
                                                </td>
                                                <td>@user.Email</td>
                                                <td>@user.Phone</td>
                                                <td>
                                                    <div class="md-d-flex">
                                                        <button class="md-btn md-btn-text" @onclick="() => EditUser(user)" title="Edit">
                                                            <span class="material-icons">edit</span>
                                                        </button>
                                                        <button class="md-btn md-btn-text" style="color: var(--md-error);" @onclick="() => DeleteUser(user.Id)" title="Delete">
                                                            <span class="material-icons">delete</span>
                                                        </button>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private List<User>? users;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadUsers();
    }

    private async Task LoadUsers()
    {
        try
        {
            isLoading = true;
            users = await UserService.GetUsersAsync();
        }
        catch (Exception ex)
        {
            // TODO: Add proper error handling with toast notification
            Console.WriteLine($"Error loading users: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private void ShowCreateModal()
    {
        // TODO: Implement create user modal
    }

    private void EditUser(User user)
    {
        // TODO: Implement edit user functionality
    }

    private async Task DeleteUser(int userId)
    {
        // TODO: Implement delete user functionality
    }
} 