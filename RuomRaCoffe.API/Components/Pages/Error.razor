@page "/Error"
@using System.Diagnostics

<PageTitle>Error</PageTitle>

<div class="md-container">
    <div class="md-row md-justify-content-center">
        <div class="md-col-8">
            <div class="md-card md-mt-5">
                <div class="md-card-body md-text-center">
                    <div class="md-mb-4">
                        <span class="material-icons md-font-size-4xl" style="color: var(--md-error);">error_outline</span>
                    </div>
                    
                    <h1 style="color: var(--md-error);">Error.</h1>
                    <h2 style="color: var(--md-error);">An error occurred while processing your request.</h2>

                    @if (ShowRequestId)
                    {
                        <div class="md-paper md-paper-outlined md-mb-3" style="display: inline-block; padding: 0.5rem 1rem;">
                            <p class="md-mb-0">
                                <strong>Request ID:</strong> <code>@RequestId</code>
                            </p>
                        </div>
                    }

                    <div class="md-divider md-mb-3"></div>

                    <h3>Development Mode</h3>
                    <p style="color: var(--md-gray-600);">
                        Swapping to <strong>Development</strong> environment will display more detailed information about the error that occurred.
                    </p>
                    <p style="color: var(--md-gray-600);">
                        <strong>The Development environment shouldn't be enabled for deployed applications.</strong>
                        It can result in displaying sensitive information from exceptions to end users.
                        For local debugging, enable the <strong>Development</strong> environment by setting the <strong>ASPNETCORE_ENVIRONMENT</strong> environment variable to <strong>Development</strong>
                        and restarting the app.
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>

@code{
    [CascadingParameter]
    private HttpContext? HttpContext { get; set; }

    private string? RequestId { get; set; }
    private bool ShowRequestId => !string.IsNullOrEmpty(RequestId);

    protected override void OnInitialized() =>
        RequestId = Activity.Current?.Id ?? HttpContext?.TraceIdentifier;
}
